#!/bin/bash
## Set directory time/date based on the newest content within it
##
## @todo Fix bug: If directory name contains a quote ('), this doesn't work.
## @todo Add -v switch to show directories being affected.
## @todo Add -x or --exclude to specify files to exclude (e.g., .DS_Store, etc.)
## @todo Add -o to set the directory to the oldest date of its contents.

[ -e `dirname $0`/_include.sh ] && source _include.sh

__HELP=0

unset _recurse
declare -a _all=("" "-not" "-path" "*/.*")
while getopts ":ar" OPTNAME "$@"; do
#	echo OPTNAME=$OPTNAME OPTARG=$OPTARG OPTIND=$OPTIND
	case "$OPTNAME" in
		a)	## Include "dot" files
			_all=("-a")
			;;
		r) _recurse=1
			;;
#		h)
#			__HELP=1
#			break
#			;;
		\?)	## Invalid option
			echo arg=$OPTARG name=$OPTNAME
			case "$OPTARG" in
				h|\?)
					;;
				*)
					echo "${t_red}Unexpected option -$OPTARG${t_reset}".
			esac
			__HELP=1
			;;
	   *) ## Unhandled, "valid" option
			echo "${t_red}Unprocessed option -$OPTNAME${t_reset}".
			__HELP=1
			;;
	esac
done
shift $(($OPTIND-1))

if [ $__HELP -eq 1 ]; then
	cat <<-HELP

		Set directory date to most recent of its contents

		Form:
		   `basename $0` [options] {directory}

		Options:
		   -a All: include dot-files
		   -r Recurse: perform `basename $0` in sub-directories, first

	HELP
	exit 1
fi

## Call touchdir against every directory under the directory.
if [ -n "$_recurse" ]; then
	find "$@" -depth "${_all[@]:1}" -type d -exec "$0" ${_all[0]} "{}" \;
	exit
fi

## Target directory
target="$1"
if [ ! -d "$target" ]; then
	echo "'$target' is not a directory."
	exit 1
fi

## Convenience settings
[ -n "$_all" ] && shopt -s dotglob
shopt -s nullglob
## Make sure directory has content
newest=("$target"/*)
if [ ${#newest[@]} -eq 0 ]; then
   echo "No contents in '$target'"
   exit 1
fi

## Accommodate different parameters of OS X vs. others
if [ "$(uname -s)" = "Darwin" ]; then
	statparms=(-f "%m '%N'")
else
	statparms=(-c '%Y %N')
fi

## Sort content by modified time and get name of most recent.
#newest=$(stat "${statparms[@]}" "$target"/*|grep -v '.DS_Store'|grep -vi 'picasa.ini'|sort -nr|head -1|cut -d ' ' -f2-)
newest=$(stat "${statparms[@]}" "$target"/*|grep -ve '.DS_Store' -vie 'picasa.*\.ini' -ve 'Thumbs.db' -vie 'desktop.ini' -ve '.lrcat'|sort -nr|head -1|cut -d ' ' -f2-)
newest="${newest:1:((${#newest}-2))}"
if [ ${#newest} -eq 0 ]; then
   echo "No relevant contents in '$target'"
   exit 1
fi

#echo $newest
#echo touch -r "${newest}" "$target"
## Update target based on newest of its content
#echo touch -r "${newest}" "$target"
touch -r "${newest}" "$target"
